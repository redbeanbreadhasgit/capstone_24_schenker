[{"C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\index.js":"1","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\App.js":"2","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\reportWebVitals.js":"3","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\sign-in\\SignIn.js":"4","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-applicantList\\Dashboard-applicantList.js":"5","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-applicantList\\Filter.js":"6","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-homepage\\Dashboard-homepage.js":"7","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-createJobMatching\\Dashboard-createJobMatching.js":"8","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-applicantList\\ApplicantList.js":"9","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\sign-up\\SignUp.js":"10","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-jobList\\Dashboard-jobList.js":"11","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-jobList\\JobList.js":"12","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\routes\\invoices.jsx":"13","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\routes\\expenses.jsx":"14","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\routes\\data.js":"15","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\routes\\invoice.jsx":"16","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\components\\listItems.js":"17","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\components\\icons.js":"18","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\components\\Title.js":"19","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-applicantList-detailed\\Dashboard-applicantList-detailed.js":"20","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-applicantList-detailed\\GetApplicantInfo.js":"21","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\json\\jsonUtil.js":"22","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-jobList-detailed\\Dashboard-jobList-detailed.js":"23","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-jobList-detailed\\ReturnApplicantsInfo.js":"24","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-jobList-detailed\\ReturnJobInfo.js":"25","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\jsonver3\\jsonUtil.js":"26"},{"size":2822,"mtime":1656677976686,"results":"27","hashOfConfig":"28"},{"size":2656,"mtime":1656677813616,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1653569155404,"results":"30","hashOfConfig":"28"},{"size":3400,"mtime":1656678769210,"results":"31","hashOfConfig":"28"},{"size":5699,"mtime":1657241251719,"results":"32","hashOfConfig":"28"},{"size":3256,"mtime":1655477748344,"results":"33","hashOfConfig":"28"},{"size":8050,"mtime":1657240540165,"results":"34","hashOfConfig":"28"},{"size":7790,"mtime":1657240978159,"results":"35","hashOfConfig":"28"},{"size":5582,"mtime":1657236179111,"results":"36","hashOfConfig":"28"},{"size":4492,"mtime":1656678753769,"results":"37","hashOfConfig":"28"},{"size":5414,"mtime":1657231308036,"results":"38","hashOfConfig":"28"},{"size":4017,"mtime":1657231502886,"results":"39","hashOfConfig":"28"},{"size":972,"mtime":1655470570507,"results":"40","hashOfConfig":"28"},{"size":227,"mtime":1655424268127,"results":"41","hashOfConfig":"28"},{"size":797,"mtime":1655468850491,"results":"42","hashOfConfig":"28"},{"size":549,"mtime":1655469005377,"results":"43","hashOfConfig":"28"},{"size":2369,"mtime":1655728899136,"results":"44","hashOfConfig":"28"},{"size":601,"mtime":1656684429556,"results":"45","hashOfConfig":"28"},{"size":343,"mtime":1650609016000,"results":"46","hashOfConfig":"28"},{"size":6855,"mtime":1657236538892,"results":"47","hashOfConfig":"28"},{"size":8504,"mtime":1657241371867,"results":"48","hashOfConfig":"28"},{"size":3073,"mtime":1656783034725,"results":"49","hashOfConfig":"28"},{"size":6095,"mtime":1657235781059,"results":"50","hashOfConfig":"28"},{"size":2921,"mtime":1657235576230,"results":"51","hashOfConfig":"28"},{"size":3506,"mtime":1657235620101,"results":"52","hashOfConfig":"28"},{"size":4576,"mtime":1657235268504,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},"1bt48m0",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"58"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"58"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"58"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"58"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"58"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"58"},"C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\index.js",["150","151","152","153","154","155","156","157","158"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route, Routes,  } from 'react-router-dom';\n\nimport Expenses from \"./routes/expenses\";\nimport Invoices from \"./routes/invoices\";\nimport Invoice from \"./routes/invoice\"\nimport Dashboard_homepage from './pages/dashboard-homepage/Dashboard-homepage'\nimport DashBoard_createJobMatching from './pages/dashboard-createJobMatching/Dashboard-createJobMatching'\nimport DashBoard_applicantList from './pages/dashboard-applicantList/Dashboard-applicantList'\nimport Dashboard_jobList from './pages/dashboard-jobList/Dashboard-jobList'\nimport SignIn from './pages/sign-in/SignIn'\nimport SignUp from './pages/sign-up/SignUp'\nimport DashBoard_applicantList_detailed from './pages/dashboard-applicantList-detailed/Dashboard-applicantList-detailed';\nimport DashBoard_jobList_detailed from './pages/dashboard-jobList-detailed/Dashboard-jobList-detailed';\n\n// import 'fontsource-roboto';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>\n\n  <BrowserRouter>\n    {/* test */}\n    {/* <Routes>\n    <Route path=\"/\" element={<App />} >\n      <Route path=\"/invoices\" element={<Invoices />}>\n      <Route\n        index\n        element={\n          <main style={{ padding: \"1rem\" }}>\n            <p>Select an invoice</p>\n          </main>\n        }\n        />\n        <Route path=\":invoiceId\" element={<Invoice />} />\n      </Route> \n      <Route path=\"expenses\" element={<Expenses />} />\n      <Route\n      path=\"*\"\n      element={\n        <main style={{ padding: \"1rem\" }}>\n          <p>There's nothing here!</p>\n        </main>\n      }\n      />\n    </Route>\n    </Routes> */}\n\n    <Routes>\n      <Route path=\"/\" element={<App />} />\n      <Route path=\"homepage\" element={<Dashboard_homepage />} />\n      <Route path=\"createJobMatching\" element={<DashBoard_createJobMatching/>} />\n      <Route path=\"applicantList\" element={<DashBoard_applicantList/>}></Route>\n      <Route path=\"applicantList:applicantID\" element={<DashBoard_applicantList_detailed/>}/>\n      <Route path=\"jobList\" element={<Dashboard_jobList/>}/>\n      <Route path=\"jobList:jobID\" element={<DashBoard_jobList_detailed/>}/>\n      <Route path=\"signIn\" element={<SignIn/>}/>\n      <Route path=\"signUp\" element={<SignUp/>}/>     \n      \n      {/* <Route path=\"test\" element={<DashBoard_applicantList_detailed/>}/>  */}\n\n    </Routes>\n\n    \n\n    \n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\App.js",["159","160","161","162","163","164","165","166","167"],[],"import logo from './logo.svg';\nimport './App.css';\nimport SignIn from './pages/sign-in/SignIn.js'\nimport DashBoard_applicantList from './pages/dashboard-applicantList/Dashboard-applicantList'\nimport DashBoard_homepage from './pages/dashboard-homepage/Dashboard-homepage'\nimport DashBoard_createJobMatching from './pages/dashboard-createJobMatching/Dashboard-createJobMatching'\nimport Signup from \"./pages/sign-up/SignUp.js\"\nimport Dashboard_jobList from \"./pages/dashboard-jobList/Dashboard-jobList.js\"\nimport DashBoard_applicantList_detailed from './pages/dashboard-applicantList-detailed/Dashboard-applicantList-detailed';\nimport { Link, Outlet } from 'react-router-dom';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React from 'react';\n// //import ReactDOM from 'react-dom';\n// import Button from '@material-ui/core/Button';\n// // font\n// //import 'fontsource-roboto';\n\n// function App() {\n//   return (\n//     <p>\n//       <p color=\"primary\">\n//       hi Capstone\n//       </p>\n//       <h1 color=\"primary\">\n//       hi Capstone\n//       </h1>\n//       <h2 color=\"primary\">\n//       hi Capstone\n//       </h2>\n\n//       <Button variant=\"contained\" color=\"primary\">\n//       hi Capstone\n//       </Button>\n//     </p>\n    \n//   );\n// }\n\n// // ReactDOM.render(<App />, document.querySelector('#app'));\n// export default App;\n\nfunction App() {\n  return (\n    <SignIn>\n    </SignIn>\n    // <DashBoard_applicantList>\n    // </DashBoard_applicantList>\n    // <DashBoard_homepage>\n    // </DashBoard_homepage> \n    // <DashBoard_createJobMatching>\n    // </DashBoard_createJobMatching>\n    // <Signup></Signup>\n    // <Dashboard_jobList></Dashboard_jobList>\n    // <DashBoard_applicantList_detailed></DashBoard_applicantList_detailed>\n\n\n    // test\n    // <div>\n    //   <h1>Bookkeeper</h1>\n    //   <nav\n    //     style={{\n    //       borderBottom: \"solid 1px\",\n    //       paddingBottom: \"1rem\",\n    //     }}\n    //   >\n    //     <Link to=\"/invoices\">Invoices</Link> |{\" \"}\n    //     <Link to=\"/expenses\">Expenses</Link> |{\" \"}\n    //     <Link to=\"/\">Home</Link>\n    //     <Outlet />\n    //   </nav>\n    // </div>\n\n  );\n}\n\nexport default App;\n","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\reportWebVitals.js",[],[],"C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\sign-in\\SignIn.js",["168"],[],"import * as React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport {Link as routerLink} from 'react-router-dom';\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {' '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Capstone Team 24\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignIn() {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    console.log({\n      email: data.get('email'),\n      password: data.get('password'),\n    });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link variant=\"body2\" component={routerLink} to=\"\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link variant=\"body2\"  component={routerLink} to=\"/signup\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        {/* <Copyright sx={{ mt: 8, mb: 4 }} /> */}\n      </Container>\n    </ThemeProvider>\n  );\n}\n","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-applicantList\\Dashboard-applicantList.js",["169","170","171","172","173"],[],"C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-applicantList\\Filter.js",["174","175","176","177","178","179"],[],"import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from '../components/Title';\r\nimport { Subtitles } from '@material-ui/icons';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// filter stuffs import\r\nimport { Radio, FormControl, FormLabel, FormControlLabel, RadioGroup, } from '@material-ui/core';\r\n\r\n\r\n// Generate Order Data\r\nfunction createData(id, title, e1, e2, e3, e4, e5, e6) {\r\n  return { id, title, e1, e2, e3, e4, e5, e6 };\r\n}\r\n\r\nconst rows = [\r\n  createData(0, 'Exprience:', '< 1 year', '1 ~ 3 years', '3 ~ 5 years', '5 ~ 10 years', '> 10 years', ''),\r\n  createData(1, 'Skills:', 'Java', 'C#', 'C++', 'Python', 'C', 'Other'),\r\n  createData(2, 'Educational Level:', 'Secondary', 'College', 'University', 'PhD', 'Other', '' ),\r\n//   createData(3, '16 Mar, 2022', 'Michael Jackson', '99%', 'Java Engineer', 'pending', 654.39),\r\n//   createData(4, '15 Mar, 2022', 'Bruce Springsteen', '120%', 'Accountant', 'pending', 212.79),\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function Filter() {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Applicant Filter</Title>\r\n      <Typography component=\"p\" variant=\"h10\">\r\n        Click to filter\r\n      </Typography>\r\n\r\n      {/* <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">Gender</FormLabel>\r\n        <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange}>\r\n          <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n          <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n          <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\r\n          <FormControlLabel value=\"disabled\" disabled control={<Radio />} label=\"(Disabled option)\" />\r\n        </RadioGroup>\r\n      </FormControl> */}\r\n\r\n      {/* older version */}\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n        \r\n            \r\n            \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell>{row.title}</TableCell> \r\n              <TableCell>{row.e1}</TableCell>\r\n              <TableCell>{row.e2}</TableCell>\r\n              <TableCell>{row.e3}</TableCell>\r\n              <TableCell>{row.e4}</TableCell>\r\n              <TableCell>{row.e5}</TableCell>\r\n              <TableCell>{row.e6}</TableCell>\r\n              <TableCell align=\"right\">{row.selected}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      \r\n      <div className={classes.seeMore}>\r\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\r\n          See more\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-homepage\\Dashboard-homepage.js",["180","181","182","183","184"],[],"C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-createJobMatching\\Dashboard-createJobMatching.js",["185","186","187","188"],[],"C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-applicantList\\ApplicantList.js",["189","190","191","192","193","194","195","196","197","198","199","200","201"],[],"import React, { useState, useEffect, Component } from 'react';\nimport {Link as routerLink, Outlet } from 'react-router-dom';\nimport {Link as Link} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../components/Title';\nimport applicants from '../json/all_applicants.json';\nimport pred from \"../json/model_prediction.json\";\nimport { Button, RootRef } from '@material-ui/core';\nimport Invoice from '../../routes/invoice';\n\nimport {getApplicantInfo, getJobInfo, getPredictionInfo, getApplicantsNum, getPredictionsNum} from \"../jsonver3/jsonUtil\";\nimport { tab } from '@testing-library/user-event/dist/tab';\n\n\n\n\nlet num=getApplicantsNum();\nlet predCount=getPredictionsNum();\n// generate all jobs\n\nfunction createTable(){\n  let table=[];\n  for (let i=1; i<=getApplicantsNum(); i++){\n    table.push(getApplicantInfo(i));\n  }\n  return table;\n}\n\n// for (let i=0; i<predCount; i++){\n//   if (getPredictionInfo(i).predictionID === )\n// }\n\nlet jobList=[\"Field Support Engineer\",\"System Analyst\",\"GPIS Executive\",\"GPIS 2\"];\n\n// generate all predictions\nlet predList=[];\nfor (var i in pred.rows){\n  predList.push(pred.rows[i][1])\n}\n\n// Generate Order Data\nfunction createData(id, date, name, role, suitability, status, selected) {\n  return { id, date, name, role, suitability, status,  selected };\n}\n\nfunction findSuitability(applicantId,jobId){\n  let suitabilityList=[];\n  for (var i=0; i<predCount;i++){\n    let eachPredEntry=pred.rows[i];\n    // console.log(eachPredEntry);\n    if (eachPredEntry[2] === applicantId ){\n      suitabilityList.push(eachPredEntry);\n    }\n    let length=suitabilityList.length;\n    // console.log(predCount);\n    for (var j=0;j<length;j++){\n      if (suitabilityList[j][3]=== jobId){\n        return suitabilityList[j][1]\n      }      \n    }\n    // return \"error\";\n  }\n}\n\n// findSuitability(1,1);\n\nlet rows = [];\n\n// create rows\nfor (let i=0; i<num; i++){\n  let eachApplicant=applicants.rows[i];\n  let applicantId=eachApplicant[0];\n  let jobId=eachApplicant[4];\n  rows.push(createData(applicantId, \"?\" ,eachApplicant[1],jobList[jobId-1],findSuitability(applicantId,jobId),eachApplicant[3],0,0));\n  \n}\n\n// sort by suitability , id\nfunction sortSuitability(x,y){\n  if (x.suitability < y.suitability) {return 1;}\n  if (x.suitability > y.suitability) {return -1;}\n  return 0;\n}\n\nfunction sortId(x,y){\n  if (x.id < y.id) {return 1;}\n  if (x.id > y.id) {return -1;}\n  return 0;\n}\n\nfunction sortBySuitabilty(){\n  rows.sort(sortSuitability);  \n}\n\nfunction sortById(){\n  rows.sort(sortId);  \n}\n\n// rows.sort(sortSuitability);\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\n\n \nconst prevRowsInfo=rows;\n\nexport default function Orders() {\n  const classes = useStyles();\n  const [rowsInfo,setRowsInfo]=useState(rows);\n  const prevRowsInfo=rows;\n  // useEffect(() => {\n  //   setRowsInfo(originRows)\n  // });\n  let table=createTable();\n  return (\n    <React.Fragment>\n      {/* <Title>All Applicants</Title> */}\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            {/* <TableCell>ID</TableCell> */}\n            <TableCell>Name</TableCell>\n            <TableCell>Applied Role</TableCell>\n            <TableCell>Suitability</TableCell>\n            {/* <TableCell>Pending Status</TableCell> */}\n            <TableCell>Date</TableCell>\n            {/* <TableCell align=\"right\">Selected or not</TableCell> */}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {table.map((each) => (\n            <TableRow >\n              {/* <TableCell>{each.applicantID}</TableCell> */}\n              \n              <TableCell><Link component={routerLink} to={`/applicantList:${each.applicantID}` } >{each.applicantName}</Link></TableCell>\n              <TableCell>{getJobInfo(each.applicantAppliedJobID).jobTitle}</TableCell>\n              <TableCell>{getPredictionInfo(each.applicantID,each.applicantAppliedJobID).predictionResult}</TableCell>\n              {/* <TableCell>{each.pendingStatus}</TableCell> */}\n              <TableCell>{\"null\"}</TableCell>\n              {/* <TableCell align=\"right\">{row.selected}</TableCell> */}\n            </TableRow>\n          ))}\n        </TableBody>        \n      </Table>\n      <Button variant=\"contained\" color=\"primary\" onClick={()=>{\n        setRowsInfo(rows.sort(sortSuitability))\n        // setRowsInfo(prevRowsInfo => {\n        //   console.log('read rowsInfo state in setRowsIngo function', prevRowsInfo);\n        //   return prevRowsInfo;\n        // });\n        }\n      }>sort by suitability %</Button>\n      <Button variant=\"contained\" color=\"primary\" onClick={()=>{\n        setRowsInfo(rows.sort(sortId))\n        // setRowsInfo(prevRowsInfo => {\n        //   console.log('read rowsInfo state in setRowsIngo function', prevRowsInfo);\n        //   return prevRowsInfo;\n        // });\n        }\n      }>sort by applicantId </Button>\n      <h3>{(applicants.rows)[4][1]}</h3>\n      <Button variant=\"contained\" color=\"primary\">\n        \n      </Button>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more updates\n        </Link>\n      </div>\n\n      {/* <Outlet></Outlet> */}\n    </React.Fragment>\n  );\n}\n\n\n\n\n\n\n","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\sign-up\\SignUp.js",["202","203","204"],[],"import * as React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport {Link as routerLink} from 'react-router-dom';\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {' '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Capstone Team 24\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignUp() {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    console.log({\n      email: data.get('email'),\n      password: data.get('password'),\n    });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            \n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"First Name\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Last Name\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Username\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password_repeated\"\n              label=\"Confirm Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            {/* <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            /> */}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Create new acount\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link variant=\"body2\" component={routerLink} to=\"\">\n                  Help\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link variant=\"body2\"  component={routerLink} to=\"/signin\">\n                  {\"Already have an account? Sign In\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        {/* <Copyright sx={{ mt: 8, mb: 4 }} /> */}\n      </Container>\n    </ThemeProvider>\n  );\n}\n","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-jobList\\Dashboard-jobList.js",["205","206","207"],[],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from '../components/listItems';\n\nimport JobList from './JobList';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {' '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Capstone Team 24\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashBoard_jobList() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            All Job\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <JobList />\n              </Paper>\n            </Grid>\n          </Grid>\n          {/* <Box pt={4}>\n            <Copyright />\n          </Box> */}\n        </Container>\n      </main>\n    </div>\n  );\n}\n","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-jobList\\JobList.js",["208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225"],[],"import React, { useState, useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../components/Title';\nimport applicants from '../json/all_applicants.json';\nimport pred from \"../json/model_prediction.json\";\nimport jobs from \"../json/all_jobs.json\";\nimport { Button, RootRef } from '@material-ui/core';\n\nimport {getApplicantInfo, getJobInfo, getPredictionInfo, getJobsNum,getPredictionsNum} from \"../jsonver3/jsonUtil\";\nimport {Link as routerLink, Outlet } from 'react-router-dom';\n\n\n\nlet jobnum=getJobsNum();\nlet predCount=getPredictionsNum();\n\nfunction createTable(){\n  let table=[];\n  for (let i=1; i<=jobnum; i++){\n    table.push(getJobInfo(i))\n  }\n  return table;\n}\n\n\n\nfunction findSuitability(applicantId,jobId){\n  let suitabilityList=[];\n  for (var i=0; i<predCount;i++){\n    let eachPredEntry=pred.rows[i];\n    // console.log(eachPredEntry);s\n    if (eachPredEntry[2] === applicantId ){\n      suitabilityList.push(eachPredEntry);\n    }\n    let length=suitabilityList.length;\n    // console.log(predCount);\n    for (var j=0;j<length;j++){\n      if (suitabilityList[j][3]=== jobId){\n        return suitabilityList[j][1]\n      }      \n    }\n    // return \"error\";\n  }\n}\n\n// findSuitability(1,1);\n\nlet rows = [\n];\n\n\n\n// sort by suitability , id\nfunction sortSuitability(x,y){\n  if (x.suitability < y.suitability) {return 1;}\n  if (x.suitability > y.suitability) {return -1;}\n  return 0;\n}\n\nfunction sortId(x,y){\n  if (x.id < y.id) {return 1;}\n  if (x.id > y.id) {return -1;}\n  return 0;\n}\n\nfunction sortBySuitabilty(){\n  rows.sort(sortSuitability);  \n}\n\nfunction sortById(){\n  rows.sort(sortId);  \n}\n\n// rows.sort(sortSuitability);\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst prevRowsInfo=rows;\n\nexport default function JobListTable() {\n  const classes = useStyles();\n  const [rowsInfo,setRowsInfo]=useState(rows);\n  const prevRowsInfo=rows;\n  // useEffect(() => {\n  //   setRowsInfo(originRows)\n  // });\n  let table=createTable();\n  return (\n    <React.Fragment>\n      {/* <Title>All Jobs</Title> */}\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            {/* <TableCell>ID</TableCell> */}\n            <TableCell>Job Title</TableCell>\n            <TableCell>Matching Date</TableCell>\n            <TableCell>Update Date</TableCell>\n            <TableCell>Hiring Manager</TableCell>\n            <TableCell>Recruiter</TableCell>\n            <TableCell>Job Description</TableCell>\n            <TableCell>Job Status</TableCell>\n            {/* <TableCell align=\"right\">Selected or not</TableCell> */}\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {table.map((each) => (\n            <TableRow >\n              {/* <TableCell>{row.id}</TableCell> */}\n              <TableCell><Link component={routerLink} to={`/jobList:${each.jobID}`}>{each.jobTitle}</Link></TableCell>\n              <TableCell>{each.jobMatchingDate}</TableCell>\n              <TableCell>{each.jobUpdateDate}</TableCell>\n              <TableCell>{\"*each.hiringManager*\"}</TableCell>\n              <TableCell>{each.recruiterID}</TableCell>\n              <TableCell>{each.jobDescription}</TableCell>\n              <TableCell>{each.jobStatus}</TableCell>\n              {/* <TableCell align=\"right\">{row.selected}</TableCell> */}\n            </TableRow>\n          ))}\n        </TableBody>        \n      </Table>\n      \n      \n      {/* <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more updates\n        </Link>\n      </div> */}\n      \n    </React.Fragment>\n  );\n}\n\n\n\n\n\n\n","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\routes\\invoices.jsx",["226"],[],"import { NavLinkm, Link } from \"react-router-dom\";\r\nimport {getInvoices} from './data'\r\nimport { Outlet } from \"react-router-dom\";\r\n\r\n// export default function Invoices() {\r\n//     return (\r\n//       <main style={{ padding: \"1rem 0\" }}>\r\n//         <h2>Invoices</h2>\r\n//         <Link to=\"/\">Home</Link>\r\n//       </main>\r\n//     );\r\n//   }\r\n\r\n\r\nexport default function Invoices() {\r\n    let invoices = getInvoices();\r\n    return (\r\n      <div style={{ display: \"flex\" }}>\r\n        <nav\r\n          style={{\r\n            borderRight: \"solid 2px\",\r\n            padding: \"1rem\",\r\n          }}\r\n        >\r\n          {invoices.map((invoice) => (\r\n            <Link\r\n              style={{ display: \"block\", margin: \"1rem 0\" }}\r\n              to={`/invoices/${invoice.number}`}\r\n              key={invoice.number}\r\n            >\r\n              {invoice.name}\r\n            </Link>\r\n          ))}\r\n          <Outlet/>\r\n        </nav>\r\n        <Outlet/>\r\n      </div>\r\n    );\r\n  }","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\routes\\expenses.jsx",[],[],"C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\routes\\data.js",[],[],"C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\routes\\invoice.jsx",["227"],[],"import { useParams } from \"react-router-dom\";\r\nimport { getInvoice } from \"./data\";\r\n\r\nexport default function Invoice() {\r\n    let para=useParams();\r\n    let invoice = getInvoice(parseInt(para.invoiceId, 10));\r\n    let InvoiceId=para.invoiceId;\r\n    // return <h2>Invoice # {InvoiceId}</h2>;\r\n    return (\r\n        <main style={{ padding: \"1rem\" }}>\r\n          <h2>Total Due: {invoice.amount}</h2>\r\n          <p>\r\n            {invoice.name}: {invoice.number}\r\n          </p>\r\n          <p>Due Date: {invoice.due}</p>\r\n        </main>\r\n      );\r\n  }","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\components\\listItems.js",["228","229"],[],"import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nimport { Link } from 'react-router-dom';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button component={Link} to=\"/homepage\">\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    {/* <ListItem button>\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Orders\" />\n    </ListItem> */}\n    <ListItem button component={Link} to=\"/applicantList\">\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Applicants\" />\n    </ListItem>\n    {/* ?? what is activity button */}\n    <ListItem button component={Link} to=\"/createJobMatching\">\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Activities\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/jobList\">\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Jobs\" />\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Now signed in as:</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Joe Biden\" />\n    </ListItem>\n    \n    {/* <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem> */}\n    {/* <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Year-end sale\" />\n    </ListItem> */}\n  </div>\n);\n","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\components\\icons.js",["230"],[],"import { Icon } from \"@material-ui/core\";\r\nimport AccessibilityNewIcon from '@material-ui/icons/AccessibilityNew';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\nexport const applicantIcon =(\r\n    <div>\r\n      <AccessibilityNewIcon style={{fontSize : 150}}></AccessibilityNewIcon> \r\n    </div>\r\n  );\r\n  \r\nexport const jobIcon =(\r\n    <div>\r\n      <WorkIcon style={{fontSize : 150}}></WorkIcon>\r\n    </div>\r\n);\r\n\r\nexport const jobmatchingIcon =(\r\n  <div>\r\n    <DescriptionIcon style={{fontSize : 150}}></DescriptionIcon>\r\n  </div>\r\n);","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\components\\Title.js",[],[],"C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-applicantList-detailed\\Dashboard-applicantList-detailed.js",["231","232","233","234","235","236","237"],[],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems,  } from '../components/listItems';\nimport { applicantIcon, jobIcon } from '../components/icons';\nimport { Button } from '@material-ui/core';\nimport {ReturnApplicantInfo,ReturnApplicantName,ReturnApplicantInfoTable, Reprofile} from './GetApplicantInfo';\n\n\n\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {' '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Capstone Team 24\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashBoard_homepage() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Applicant : CV - <ReturnApplicantName></ReturnApplicantName>\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={10}>\n            {/* number of applicants */}\n            {/* <Paper className={fixedHeightPaper}> */}\n            <Grid container item xs={12} md={12} lg={12} spacing={6}>  \n              <Grid item xs={12} md={12} lg={12}>\n                {/* <Paper className={classes.paper}> */}\n                <ReturnApplicantInfo></ReturnApplicantInfo>\n               {/* </Paper>  */}\n              </Grid>        \n              <Grid item xs={12} md={12} lg={12}>\n                {/* <Paper className={classes.paper}> */}\n                <ReturnApplicantInfoTable></ReturnApplicantInfoTable>\n               {/* </Paper>  */}\n              </Grid>   \n              <Grid item xs={12} md={12} lg={12}>\n                {/* <Paper className={classes.paper}> */}\n                <Reprofile></Reprofile>\n               {/* </Paper>  */}\n              </Grid> \n            </Grid>\n            {/* <h4>{b}</h4> */}\n            {/* </Paper> */}\n            {/* number of jobs */}\n            \n            {/* Filter */}\n            {/* <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Filter />\n              </Paper>\n            </Grid> */}\n            {/* Recent Orders */}\n            {/* <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders />\n              </Paper>\n            </Grid> */}\n          </Grid>\n          {/* <Box pt={4}>\n            <Copyright />\n          </Box> */}\n        </Container>\n      </main>\n    </div>\n  );\n}\n","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-applicantList-detailed\\GetApplicantInfo.js",["238","239","240","241"],[],"C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\json\\jsonUtil.js",["242"],[],"C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-jobList-detailed\\Dashboard-jobList-detailed.js",["243","244","245","246","247","248","249"],[],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems,  } from '../components/listItems';\nimport { applicantIcon, jobIcon } from '../components/icons';\nimport { Button } from '@material-ui/core';\nimport {ReturnJobInfo, GetJobTitle} from './ReturnJobInfo';\nimport {ReturnApplicantsInfo} from './ReturnApplicantsInfo';\n\n\n\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {' '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Capstone Team 24\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashBoard_homepage() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Job : <GetJobTitle></GetJobTitle>            \n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={4}>\n            {/* number of applicants */}\n            {/* <Paper className={fixedHeightPaper}> */}\n            <Grid container item xs={12} md={12} lg={12} space={10}>          \n              {/* <Paper className={classes.paper}> */}\n                <ReturnJobInfo></ReturnJobInfo>\n              {/* </Paper>  */}\n            </Grid>\n            <Grid container item xs={12} md={12} lg={12} space={10}>          \n              {/* <Paper className={classes.paper}> */}\n                <ReturnApplicantsInfo></ReturnApplicantsInfo>\n              {/* </Paper>  */}\n            </Grid>\n            \n          </Grid>\n          {/* <Box pt={4}>\n            <Copyright />\n          </Box> */}\n        </Container>\n      </main>\n    </div>\n  );\n}\n","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-jobList-detailed\\ReturnApplicantsInfo.js",["250","251","252","253","254","255","256"],[],"import { useParams } from \"react-router-dom\";\r\nimport {getApplicantInfo, getJobInfo, getPredictionInfo, getAppliedApplicants, getApplicantsNum} from \"../jsonver3/jsonUtil\";\r\nimport { Table, TableCell, TableHead, Typography, TableRow, TableBody } from \"@material-ui/core\";\r\nimport {Box} from '@material-ui/core';\r\nimport React from \"react\";\r\nimport Title from '../components/Title';\r\nimport { TabUnselected } from \"@material-ui/icons\";\r\nimport {Checkbox} from \"@material-ui/core\";\r\n\r\nfunction createTable(applicantList){\r\n    let table=[];\r\n    for (let i in applicantList){\r\n        table.push(getApplicantInfo(applicantList[i]));\r\n    }\r\n    return table;\r\n}\r\n\r\n\r\n//checkboxes\r\n\r\nfunction Checkboxes() {\r\n    const [checked, setChecked] = React.useState(true);\r\n  \r\n    const handleChange = (event) => {\r\n      setChecked(event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n          <Checkbox\r\n            checked={checked}\r\n            onChange={handleChange}\r\n            inputProps={{ 'aria-label': 'primary checkbox' }}\r\n          />\r\n        </div>)\r\n}\r\n\r\nexport function ReturnApplicantsInfo(){\r\n    let params=useParams();\r\n    let jobID=params.jobID;\r\n    let jobSelected=getJobInfo(parseInt(jobID.substring(1,)));\r\n    let appliedApplicantsList=getAppliedApplicants(jobID.substring(1,));\r\n    let table=createTable(appliedApplicantsList);\r\n    let suitability=getPredictionInfo()\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Title>All applicants applied to this job</Title>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Applicant Name</TableCell>\r\n                        <TableCell>% Suitability</TableCell>\r\n                        <TableCell>Skills</TableCell>\r\n                        <TableCell>Applicant Status</TableCell>\r\n                        <TableCell>Change Applicant Status</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        table.map(each => (\r\n                            <TableRow>\r\n                                <TableCell>{each.applicantName}</TableCell>\r\n                                <TableCell>{getPredictionInfo(each.applicantID,each.applicantAppliedJobID).predictionResult*100}</TableCell>\r\n                                <TableCell>{getPredictionInfo(each.applicantID,each.applicantAppliedJobID).applicantSkills}</TableCell>\r\n                                <TableCell>{getApplicantInfo(each.applicantID).pendingStatus}</TableCell>\r\n                                <TableCell><Checkbox/></TableCell>\r\n                            </TableRow>\r\n                        ))\r\n                    }\r\n                </TableBody>\r\n                \r\n            </Table>\r\n            {/* <text>Test: {appliedApplicantsList}{getApplicantsNum()}</text> */}\r\n        </React.Fragment>\r\n    )\r\n}","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\dashboard-jobList-detailed\\ReturnJobInfo.js",["257","258"],[],"import { useParams } from \"react-router-dom\";\r\nimport {getApplicantInfo, getJobInfo, getPredictionInfo} from \"../jsonver3/jsonUtil\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport {Box} from '@material-ui/core';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nexport function ReturnJobInfo(){\r\n    let params=useParams();\r\n    let jobID=params.jobID;\r\n    let jobSelected=getJobInfo(parseInt(jobID.substring(1,)));\r\n    \r\n    return (\r\n        <div>\r\n            {/* <Typography variant=\"h5\" >Selected Job : jobID {jobID}</Typography> */}\r\n            <Typography>\r\n\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                    Job Matching date : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                    {jobSelected.jobMatchingDate}\r\n                </Box>\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                    Job Update Date : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                    {jobSelected.jobUpdateDate}\r\n                </Box>\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                    Job Recruiter ID : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                    {jobSelected.recruiterID}\r\n                </Box>\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                    Job Requirments : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                    {jobSelected.jobKeywords}\r\n                </Box> \r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                    Job Status : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                    {jobSelected.jobStatus}\r\n                </Box> \r\n                <Button variant=\"contained\">\r\n                    Switch the Job Status\r\n                </Button>\r\n                {/* <Box fontWeight=\"fontWeightRegular\" > \r\n                    Selected Applicant Infomation :\r\n                </Box>\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                    Job ID : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\" > \r\n                    {jobSelected.jobID}\r\n                </Box>\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                Job Name : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\" > \r\n                {jobSelected.jobTitle}\r\n                </Box>\r\n                \r\n                \r\n                \r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                Job Hiring Manager ID : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                {jobSelected.hiringManagerID}\r\n                </Box>\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                Job Description :  \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                {jobSelected.jobDescription}\r\n                </Box>\r\n                 */}\r\n                \r\n            </Typography>\r\n        </div>\r\n    );     \r\n}\r\n\r\nexport function GetJobTitle(){\r\n    let params=useParams();\r\n    let jobID=params.jobID;\r\n    let jobSelected=getJobInfo(parseInt(jobID.substring(1,)));\r\n\r\n    return (jobSelected.jobTitle);\r\n}","C:\\Users\\12500\\Desktop\\Capstone\\capstone_24_schenker\\capstone\\src\\pages\\jsonver3\\jsonUtil.js",["259"],[],"import allapplicants from \"./applicant.json\"\r\nimport alljobs from \"./matchedjob.json\"\r\nimport allpredictions from \"./modelprediction.json\"\r\nimport allusers from \"./user.json\"\r\nimport allapplicanthistory from \"./applicanthistory.json\"\r\n\r\n\r\nlet allApplicants=allapplicants.rows;\r\nlet allJobs=alljobs.rows;\r\nlet allPredictions=allpredictions.rows;\r\nlet allUsers=allusers.rows;\r\nlet allApplicantHistory=allapplicanthistory.rows;\r\n\r\n\r\nlet allApplicantsNum=allApplicants.length;\r\nlet allJobsNum=allJobs.length;\r\nlet allPredictionsNum=allPredictions.length;\r\nlet allUsersNum=allUsers.length;\r\nlet allApplicantHistoryNum=allApplicantHistory.length;\r\n\r\nexport function getApplicantsNum(){\r\n    return allApplicantsNum;\r\n}\r\n\r\nexport function getJobsNum(){\r\n    return allJobsNum;\r\n}\r\n\r\nexport function getPredictionsNum(){\r\n    return allPredictionsNum;\r\n}\r\n\r\nexport function getUsersNum(){\r\n    return allUsersNum;\r\n}\r\n\r\nexport function getApplicantHistoryNum(){\r\n    return allApplicantHistoryNum;\r\n}\r\n\r\nexport function getApplicantInfo(applicantID){\r\n    let applicantIDInt=parseInt(applicantID);\r\n    for (let i=0; i<allApplicantsNum; i++){\r\n        let entry= allApplicants[i];\r\n        if (applicantIDInt==entry[0]){\r\n            return ({applicantID:applicantID, applicantResume:entry[1], applicantName:entry[2], \r\n                    applicantAppliedJobID:entry[3], reprofile:entry[4],\r\n                    reprofileID:entry[5], pendingStatus:entry[6]});\r\n            }\r\n        \r\n    }\r\n    return \"error\";\r\n}\r\n\r\nexport function getJobInfo(jobID){\r\n    let jobIDInt=parseInt(jobID);\r\n    for (let i=0; i<allJobsNum; i++){\r\n        let entry= allJobs[i];\r\n        if (jobIDInt===entry[0]){\r\n            return ({jobID:entry[0], jobTitle:entry[1], \r\n                jobMatchingDate:entry[2], jobUpdateDate:entry[3], \r\n                recruiterID:entry[4], jobDescription:entry[5], \r\n                jobKeywords:entry[6], jobStatus:entry[7]});                \r\n            }\r\n    }\r\n    return \"error\";\r\n}\r\n\r\nexport function getPredictionInfo(applicantID, jobID){\r\n    let applicantIDInt=parseInt(applicantID);\r\n    let jobIDInt=parseInt(jobID);\r\n    for (let i=0; i<allPredictionsNum; i++){\r\n        let entry= allPredictions[i];\r\n        if (applicantIDInt===entry[2] && jobIDInt===entry[3]){\r\n            return ({predictionID:entry[0], predictionResult:entry[1], \r\n                applicantID:entry[2], jobID:entry[3], \r\n                applicantSkills:entry[4]});\r\n        }\r\n    }\r\n    return \"error\";\r\n}\r\n\r\nexport function getAllPredictionInfo(applicantID){\r\n    let applicantIDInt=parseInt(applicantID);\r\n    let result=[];\r\n    // let jobIDInt=parseInt(jobID);\r\n    for (let i=0; i<allPredictionsNum; i++){\r\n        let entry= allPredictions[i];\r\n        if (applicantIDInt===entry[2] ){\r\n            result.push({predictionID:entry[0], predictionResult:entry[1], \r\n                applicantID:entry[2], jobID:entry[3], \r\n                applicantSkills:entry[4]});\r\n        }\r\n    }\r\n    if (result.length===0){\r\n        return \"error\";\r\n    }\r\n    else{\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function getApplicantHistoryInfo(applicantID){\r\n    let result=[];\r\n    let applicantIDInt=parseInt(applicantID)\r\n    \r\n    for (let i=0; i<allApplicantHistoryNum; i++){\r\n        let entry=allApplicantHistory[i];\r\n        if (applicantIDInt===entry[2]){\r\n            result.push({historyID:entry[0], pendingStatus:entry[1]\r\n                , applicantID:entry[2], jobID:entry[3]\r\n                , recruiterID:entry[4], statusChangeDate: entry[5], })\r\n        }\r\n    }\r\n    if (result.length===0){\r\n        return \"none of history\";\r\n    }else{\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nexport function getUserInfo(userID){\r\n    let userIDInt=parseInt(userID);\r\n    for (let i=0; i<allUsersNum; i++){\r\n        let entry=allUsers[i]\r\n        if (userIDInt===entry[0]){\r\n            return ({userID: entry[0], userName: entry[1], firstName: entry[2], lastName: entry[3],\r\n            password: entry[4], lastLogin: entry[5], isSuperUser: entry[6], email: entry[7],\r\n            isStaff: entry[8], isActive: entry[9], dateJoined: entry[10]})\r\n        }\r\n    }\r\n    return \"error\";\r\n}\r\n\r\n// this is only for applicant page - detailed\r\nexport function getAppliedApplicants(jobID){\r\n    let result=[];\r\n    let jobIDInt=parseInt(jobID);\r\n    \r\n    for (let i=1; i<=allApplicantsNum; i++){\r\n        let appliedJobID=parseInt(getApplicantInfo(i).applicantAppliedJobID);\r\n        if (appliedJobID===jobIDInt){\r\n            result.push(i);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n",{"ruleId":"260","severity":1,"message":"261","line":8,"column":8,"nodeType":"262","messageId":"263","endLine":8,"endColumn":16},{"ruleId":"260","severity":1,"message":"264","line":9,"column":8,"nodeType":"262","messageId":"263","endLine":9,"endColumn":16},{"ruleId":"260","severity":1,"message":"265","line":10,"column":8,"nodeType":"262","messageId":"263","endLine":10,"endColumn":15},{"ruleId":"266","severity":1,"message":"267","line":58,"column":39,"nodeType":"268","messageId":"269","endLine":58,"endColumn":61},{"ruleId":"266","severity":1,"message":"270","line":59,"column":48,"nodeType":"268","messageId":"269","endLine":59,"endColumn":78},{"ruleId":"266","severity":1,"message":"271","line":60,"column":44,"nodeType":"268","messageId":"269","endLine":60,"endColumn":70},{"ruleId":"266","severity":1,"message":"272","line":61,"column":56,"nodeType":"268","messageId":"269","endLine":61,"endColumn":91},{"ruleId":"266","severity":1,"message":"273","line":62,"column":38,"nodeType":"268","messageId":"269","endLine":62,"endColumn":58},{"ruleId":"266","severity":1,"message":"274","line":63,"column":44,"nodeType":"268","messageId":"269","endLine":63,"endColumn":73},{"ruleId":"260","severity":1,"message":"275","line":1,"column":8,"nodeType":"262","messageId":"263","endLine":1,"endColumn":12},{"ruleId":"260","severity":1,"message":"276","line":4,"column":8,"nodeType":"262","messageId":"263","endLine":4,"endColumn":31},{"ruleId":"260","severity":1,"message":"277","line":5,"column":8,"nodeType":"262","messageId":"263","endLine":5,"endColumn":26},{"ruleId":"260","severity":1,"message":"278","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":35},{"ruleId":"260","severity":1,"message":"279","line":7,"column":8,"nodeType":"262","messageId":"263","endLine":7,"endColumn":14},{"ruleId":"260","severity":1,"message":"280","line":8,"column":8,"nodeType":"262","messageId":"263","endLine":8,"endColumn":25},{"ruleId":"260","severity":1,"message":"281","line":9,"column":8,"nodeType":"262","messageId":"263","endLine":9,"endColumn":40},{"ruleId":"260","severity":1,"message":"282","line":10,"column":10,"nodeType":"262","messageId":"263","endLine":10,"endColumn":14},{"ruleId":"260","severity":1,"message":"283","line":10,"column":16,"nodeType":"262","messageId":"263","endLine":10,"endColumn":22},{"ruleId":"260","severity":1,"message":"284","line":18,"column":10,"nodeType":"262","messageId":"263","endLine":18,"endColumn":19},{"ruleId":"260","severity":1,"message":"285","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":11},{"ruleId":"260","severity":1,"message":"286","line":16,"column":8,"nodeType":"262","messageId":"263","endLine":16,"endColumn":13},{"ruleId":"260","severity":1,"message":"287","line":25,"column":8,"nodeType":"262","messageId":"263","endLine":25,"endColumn":14},{"ruleId":"260","severity":1,"message":"284","line":27,"column":10,"nodeType":"262","messageId":"263","endLine":27,"endColumn":19},{"ruleId":"260","severity":1,"message":"288","line":130,"column":9,"nodeType":"262","messageId":"263","endLine":130,"endColumn":25},{"ruleId":"260","severity":1,"message":"289","line":10,"column":10,"nodeType":"262","messageId":"263","endLine":10,"endColumn":19},{"ruleId":"260","severity":1,"message":"290","line":14,"column":10,"nodeType":"262","messageId":"263","endLine":14,"endColumn":15},{"ruleId":"260","severity":1,"message":"291","line":14,"column":17,"nodeType":"262","messageId":"263","endLine":14,"endColumn":28},{"ruleId":"260","severity":1,"message":"292","line":14,"column":30,"nodeType":"262","messageId":"263","endLine":14,"endColumn":39},{"ruleId":"260","severity":1,"message":"293","line":14,"column":41,"nodeType":"262","messageId":"263","endLine":14,"endColumn":57},{"ruleId":"260","severity":1,"message":"294","line":14,"column":59,"nodeType":"262","messageId":"263","endLine":14,"endColumn":69},{"ruleId":"260","severity":1,"message":"285","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":11},{"ruleId":"260","severity":1,"message":"286","line":15,"column":8,"nodeType":"262","messageId":"263","endLine":15,"endColumn":13},{"ruleId":"260","severity":1,"message":"295","line":21,"column":34,"nodeType":"262","messageId":"263","endLine":21,"endColumn":49},{"ruleId":"260","severity":1,"message":"284","line":36,"column":10,"nodeType":"262","messageId":"263","endLine":36,"endColumn":19},{"ruleId":"260","severity":1,"message":"288","line":141,"column":9,"nodeType":"262","messageId":"263","endLine":141,"endColumn":25},{"ruleId":"260","severity":1,"message":"285","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":11},{"ruleId":"260","severity":1,"message":"286","line":16,"column":8,"nodeType":"262","messageId":"263","endLine":16,"endColumn":13},{"ruleId":"260","severity":1,"message":"284","line":29,"column":10,"nodeType":"262","messageId":"263","endLine":29,"endColumn":19},{"ruleId":"260","severity":1,"message":"288","line":132,"column":9,"nodeType":"262","messageId":"263","endLine":132,"endColumn":25},{"ruleId":"260","severity":1,"message":"296","line":1,"column":27,"nodeType":"262","messageId":"263","endLine":1,"endColumn":36},{"ruleId":"260","severity":1,"message":"297","line":1,"column":38,"nodeType":"262","messageId":"263","endLine":1,"endColumn":47},{"ruleId":"260","severity":1,"message":"283","line":2,"column":29,"nodeType":"262","messageId":"263","endLine":2,"endColumn":35},{"ruleId":"298","severity":1,"message":"299","line":3,"column":9,"nodeType":"300","messageId":"301","endLine":3,"endColumn":21,"fix":"302"},{"ruleId":"260","severity":1,"message":"303","line":10,"column":8,"nodeType":"262","messageId":"263","endLine":10,"endColumn":13},{"ruleId":"260","severity":1,"message":"304","line":13,"column":18,"nodeType":"262","messageId":"263","endLine":13,"endColumn":25},{"ruleId":"260","severity":1,"message":"265","line":14,"column":8,"nodeType":"262","messageId":"263","endLine":14,"endColumn":15},{"ruleId":"260","severity":1,"message":"305","line":17,"column":10,"nodeType":"262","messageId":"263","endLine":17,"endColumn":13},{"ruleId":"260","severity":1,"message":"306","line":96,"column":10,"nodeType":"262","messageId":"263","endLine":96,"endColumn":26},{"ruleId":"260","severity":1,"message":"307","line":100,"column":10,"nodeType":"262","messageId":"263","endLine":100,"endColumn":18},{"ruleId":"260","severity":1,"message":"308","line":118,"column":7,"nodeType":"262","messageId":"263","endLine":118,"endColumn":19},{"ruleId":"260","severity":1,"message":"309","line":122,"column":10,"nodeType":"262","messageId":"263","endLine":122,"endColumn":18},{"ruleId":"260","severity":1,"message":"308","line":123,"column":9,"nodeType":"262","messageId":"263","endLine":123,"endColumn":21},{"ruleId":"260","severity":1,"message":"293","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":24},{"ruleId":"260","severity":1,"message":"310","line":7,"column":8,"nodeType":"262","messageId":"263","endLine":7,"endColumn":16},{"ruleId":"260","severity":1,"message":"284","line":18,"column":10,"nodeType":"262","messageId":"263","endLine":18,"endColumn":19},{"ruleId":"260","severity":1,"message":"285","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":11},{"ruleId":"260","severity":1,"message":"284","line":26,"column":10,"nodeType":"262","messageId":"263","endLine":26,"endColumn":19},{"ruleId":"260","severity":1,"message":"288","line":129,"column":9,"nodeType":"262","messageId":"263","endLine":129,"endColumn":25},{"ruleId":"260","severity":1,"message":"296","line":1,"column":27,"nodeType":"262","messageId":"263","endLine":1,"endColumn":36},{"ruleId":"260","severity":1,"message":"303","line":9,"column":8,"nodeType":"262","messageId":"263","endLine":9,"endColumn":13},{"ruleId":"260","severity":1,"message":"311","line":10,"column":8,"nodeType":"262","messageId":"263","endLine":10,"endColumn":18},{"ruleId":"260","severity":1,"message":"312","line":12,"column":8,"nodeType":"262","messageId":"263","endLine":12,"endColumn":12},{"ruleId":"260","severity":1,"message":"313","line":13,"column":10,"nodeType":"262","messageId":"263","endLine":13,"endColumn":16},{"ruleId":"260","severity":1,"message":"304","line":13,"column":18,"nodeType":"262","messageId":"263","endLine":13,"endColumn":25},{"ruleId":"260","severity":1,"message":"314","line":15,"column":9,"nodeType":"262","messageId":"263","endLine":15,"endColumn":25},{"ruleId":"260","severity":1,"message":"315","line":15,"column":39,"nodeType":"262","messageId":"263","endLine":15,"endColumn":56},{"ruleId":"260","severity":1,"message":"283","line":16,"column":29,"nodeType":"262","messageId":"263","endLine":16,"endColumn":35},{"ruleId":"260","severity":1,"message":"316","line":33,"column":10,"nodeType":"262","messageId":"263","endLine":33,"endColumn":25},{"ruleId":"260","severity":1,"message":"306","line":72,"column":10,"nodeType":"262","messageId":"263","endLine":72,"endColumn":26},{"ruleId":"260","severity":1,"message":"307","line":76,"column":10,"nodeType":"262","messageId":"263","endLine":76,"endColumn":18},{"ruleId":"260","severity":1,"message":"317","line":82,"column":10,"nodeType":"262","messageId":"263","endLine":82,"endColumn":24},{"ruleId":"260","severity":1,"message":"308","line":92,"column":7,"nodeType":"262","messageId":"263","endLine":92,"endColumn":19},{"ruleId":"260","severity":1,"message":"318","line":95,"column":9,"nodeType":"262","messageId":"263","endLine":95,"endColumn":16},{"ruleId":"260","severity":1,"message":"309","line":96,"column":10,"nodeType":"262","messageId":"263","endLine":96,"endColumn":18},{"ruleId":"260","severity":1,"message":"319","line":96,"column":19,"nodeType":"262","messageId":"263","endLine":96,"endColumn":30},{"ruleId":"260","severity":1,"message":"308","line":97,"column":9,"nodeType":"262","messageId":"263","endLine":97,"endColumn":21},{"ruleId":"260","severity":1,"message":"320","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":18},{"ruleId":"260","severity":1,"message":"321","line":7,"column":9,"nodeType":"262","messageId":"263","endLine":7,"endColumn":18},{"ruleId":"260","severity":1,"message":"322","line":7,"column":8,"nodeType":"262","messageId":"263","endLine":7,"endColumn":24},{"ruleId":"260","severity":1,"message":"323","line":11,"column":8,"nodeType":"262","messageId":"263","endLine":11,"endColumn":22},{"ruleId":"260","severity":1,"message":"324","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":14},{"ruleId":"260","severity":1,"message":"285","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":11},{"ruleId":"260","severity":1,"message":"286","line":16,"column":8,"nodeType":"262","messageId":"263","endLine":16,"endColumn":13},{"ruleId":"260","severity":1,"message":"325","line":22,"column":10,"nodeType":"262","messageId":"263","endLine":22,"endColumn":23},{"ruleId":"260","severity":1,"message":"326","line":22,"column":25,"nodeType":"262","messageId":"263","endLine":22,"endColumn":32},{"ruleId":"260","severity":1,"message":"313","line":23,"column":10,"nodeType":"262","messageId":"263","endLine":23,"endColumn":16},{"ruleId":"260","severity":1,"message":"284","line":30,"column":10,"nodeType":"262","messageId":"263","endLine":30,"endColumn":19},{"ruleId":"260","severity":1,"message":"288","line":133,"column":9,"nodeType":"262","messageId":"263","endLine":133,"endColumn":25},{"ruleId":"260","severity":1,"message":"327","line":3,"column":10,"nodeType":"262","messageId":"263","endLine":3,"endColumn":13},{"ruleId":"260","severity":1,"message":"328","line":14,"column":9,"nodeType":"262","messageId":"263","endLine":14,"endColumn":27},{"ruleId":"260","severity":1,"message":"329","line":150,"column":9,"nodeType":"262","messageId":"263","endLine":150,"endColumn":20},{"ruleId":"260","severity":1,"message":"328","line":151,"column":9,"nodeType":"262","messageId":"263","endLine":151,"endColumn":27},{"ruleId":"330","severity":1,"message":"331","line":29,"column":27,"nodeType":"332","messageId":"333","endLine":29,"endColumn":29},{"ruleId":"260","severity":1,"message":"285","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":11},{"ruleId":"260","severity":1,"message":"286","line":16,"column":8,"nodeType":"262","messageId":"263","endLine":16,"endColumn":13},{"ruleId":"260","severity":1,"message":"325","line":22,"column":10,"nodeType":"262","messageId":"263","endLine":22,"endColumn":23},{"ruleId":"260","severity":1,"message":"326","line":22,"column":25,"nodeType":"262","messageId":"263","endLine":22,"endColumn":32},{"ruleId":"260","severity":1,"message":"313","line":23,"column":10,"nodeType":"262","messageId":"263","endLine":23,"endColumn":16},{"ruleId":"260","severity":1,"message":"284","line":31,"column":10,"nodeType":"262","messageId":"263","endLine":31,"endColumn":19},{"ruleId":"260","severity":1,"message":"288","line":134,"column":9,"nodeType":"262","messageId":"263","endLine":134,"endColumn":25},{"ruleId":"260","severity":1,"message":"334","line":2,"column":80,"nodeType":"262","messageId":"263","endLine":2,"endColumn":96},{"ruleId":"260","severity":1,"message":"335","line":3,"column":39,"nodeType":"262","messageId":"263","endLine":3,"endColumn":49},{"ruleId":"260","severity":1,"message":"285","line":4,"column":9,"nodeType":"262","messageId":"263","endLine":4,"endColumn":12},{"ruleId":"260","severity":1,"message":"336","line":7,"column":10,"nodeType":"262","messageId":"263","endLine":7,"endColumn":23},{"ruleId":"260","severity":1,"message":"337","line":21,"column":10,"nodeType":"262","messageId":"263","endLine":21,"endColumn":20},{"ruleId":"260","severity":1,"message":"329","line":41,"column":9,"nodeType":"262","messageId":"263","endLine":41,"endColumn":20},{"ruleId":"260","severity":1,"message":"338","line":44,"column":9,"nodeType":"262","messageId":"263","endLine":44,"endColumn":20},{"ruleId":"260","severity":1,"message":"314","line":2,"column":9,"nodeType":"262","messageId":"263","endLine":2,"endColumn":25},{"ruleId":"260","severity":1,"message":"315","line":2,"column":39,"nodeType":"262","messageId":"263","endLine":2,"endColumn":56},{"ruleId":"330","severity":1,"message":"331","line":45,"column":27,"nodeType":"332","messageId":"333","endLine":45,"endColumn":29},"no-unused-vars","'Expenses' is defined but never used.","Identifier","unusedVar","'Invoices' is defined but never used.","'Invoice' is defined but never used.","react/jsx-pascal-case","Imported JSX component Dashboard_homepage must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component DashBoard_createJobMatching must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component DashBoard_applicantList must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component DashBoard_applicantList_detailed must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Dashboard_jobList must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component DashBoard_jobList_detailed must be in PascalCase or SCREAMING_SNAKE_CASE","'logo' is defined but never used.","'DashBoard_applicantList' is defined but never used.","'DashBoard_homepage' is defined but never used.","'DashBoard_createJobMatching' is defined but never used.","'Signup' is defined but never used.","'Dashboard_jobList' is defined but never used.","'DashBoard_applicantList_detailed' is defined but never used.","'Link' is defined but never used.","'Outlet' is defined but never used.","'Copyright' is defined but never used.","'Box' is defined but never used.","'Paper' is defined but never used.","'Filter' is defined but never used.","'fixedHeightPaper' is assigned a value but never used.","'Subtitles' is defined but never used.","'Radio' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'FormControlLabel' is defined but never used.","'RadioGroup' is defined but never used.","'jobmatchingIcon' is defined but never used.","'useEffect' is defined but never used.","'Component' is defined but never used.","no-useless-rename","Import Link unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"339","text":"340"},"'Title' is defined but never used.","'RootRef' is defined but never used.","'tab' is defined but never used.","'sortBySuitabilty' is defined but never used.","'sortById' is defined but never used.","'prevRowsInfo' is assigned a value but never used.","'rowsInfo' is assigned a value but never used.","'Checkbox' is defined but never used.","'applicants' is defined but never used.","'jobs' is defined but never used.","'Button' is defined but never used.","'getApplicantInfo' is defined but never used.","'getPredictionInfo' is defined but never used.","'findSuitability' is defined but never used.","'preventDefault' is defined but never used.","'classes' is assigned a value but never used.","'setRowsInfo' is assigned a value but never used.","'NavLinkm' is defined but never used.","'InvoiceId' is assigned a value but never used.","'ShoppingCartIcon' is defined but never used.","'AssignmentIcon' is defined but never used.","'Icon' is defined but never used.","'applicantIcon' is defined but never used.","'jobIcon' is defined but never used.","'Tab' is defined but never used.","'predictionSelected' is assigned a value but never used.","'jobSelected' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'getApplicantsNum' is defined but never used.","'Typography' is defined but never used.","'TabUnselected' is defined but never used.","'Checkboxes' is defined but never used.","'suitability' is assigned a value but never used.",[133,145],"Link"]