{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\12500\\\\Desktop\\\\Capstone\\\\capstone_24_schenker\\\\capstone\\\\src\\\\pages\\\\dashboard-jobList-detailed\\\\ReturnApplicantsInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { getApplicantInfo, getJobInfo, getPredictionInfo, getAppliedApplicants } from \"../json/jsonUtil\";\nimport { Table, TableCell, TableHead, Typography, TableRow, TableBody } from \"@material-ui/core\";\nimport { Box } from '@material-ui/core';\nimport React from \"react\";\nimport Title from '../components/Title';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createTable(applicantList) {\n  let table = [];\n\n  for (let i in applicantList) {\n    table.push(getApplicantInfo(i));\n  }\n\n  return table;\n}\n\nexport function ReturnApplicantsInfo() {\n  _s();\n\n  let params = useParams();\n  let jobID = params.jobID;\n  let jobSelected = getJobInfo(parseInt(jobID.substring(1)));\n  let appliedApplicantsList = getAppliedApplicants(parseInt(jobID.substring(1)));\n  let table = createTable(appliedApplicantsList);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"All applicants applied to this job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: /*#__PURE__*/_jsxDEV(TableHead, {\n        children: [/*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Applicant Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"% Suitability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Applicant Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Change Applicant Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: table[1].applicantJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReturnApplicantsInfo, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = ReturnApplicantsInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReturnApplicantsInfo\");","map":{"version":3,"names":["useParams","getApplicantInfo","getJobInfo","getPredictionInfo","getAppliedApplicants","Table","TableCell","TableHead","Typography","TableRow","TableBody","Box","React","Title","createTable","applicantList","table","i","push","ReturnApplicantsInfo","params","jobID","jobSelected","parseInt","substring","appliedApplicantsList","applicantJob"],"sources":["C:/Users/12500/Desktop/Capstone/capstone_24_schenker/capstone/src/pages/dashboard-jobList-detailed/ReturnApplicantsInfo.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport {getApplicantInfo, getJobInfo, getPredictionInfo, getAppliedApplicants} from \"../json/jsonUtil\";\r\nimport { Table, TableCell, TableHead, Typography, TableRow, TableBody } from \"@material-ui/core\";\r\nimport {Box} from '@material-ui/core';\r\nimport React from \"react\";\r\nimport Title from '../components/Title';\r\n\r\nfunction createTable(applicantList){\r\n    let table=[];\r\n    for (let i in applicantList){\r\n        table.push(getApplicantInfo(i));\r\n    }\r\n    return table;\r\n}\r\n\r\n\r\n\r\nexport function ReturnApplicantsInfo(){\r\n    let params=useParams();\r\n    let jobID=params.jobID;\r\n    let jobSelected=getJobInfo(parseInt(jobID.substring(1,)));\r\n    let appliedApplicantsList=getAppliedApplicants(parseInt(jobID.substring(1,)));\r\n    let table=createTable(appliedApplicantsList);\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Title>All applicants applied to this job</Title>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Applicant Name</TableCell>\r\n                        <TableCell>% Suitability</TableCell>\r\n                        <TableCell>Skills</TableCell>\r\n                        <TableCell>Applicant Status</TableCell>\r\n                        <TableCell>Change Applicant Status</TableCell>\r\n                    </TableRow>\r\n                    <TableBody>\r\n                        \r\n                    </TableBody>\r\n                </TableHead>\r\n            </Table>\r\n            <text>{table[1].applicantJob}</text>\r\n        </React.Fragment>\r\n    )\r\n}"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAAQC,gBAAR,EAA0BC,UAA1B,EAAsCC,iBAAtC,EAAyDC,oBAAzD,QAAoF,kBAApF;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,UAAtC,EAAkDC,QAAlD,EAA4DC,SAA5D,QAA6E,mBAA7E;AACA,SAAQC,GAAR,QAAkB,mBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,SAASC,WAAT,CAAqBC,aAArB,EAAmC;EAC/B,IAAIC,KAAK,GAAC,EAAV;;EACA,KAAK,IAAIC,CAAT,IAAcF,aAAd,EAA4B;IACxBC,KAAK,CAACE,IAAN,CAAWjB,gBAAgB,CAACgB,CAAD,CAA3B;EACH;;EACD,OAAOD,KAAP;AACH;;AAID,OAAO,SAASG,oBAAT,GAA+B;EAAA;;EAClC,IAAIC,MAAM,GAACpB,SAAS,EAApB;EACA,IAAIqB,KAAK,GAACD,MAAM,CAACC,KAAjB;EACA,IAAIC,WAAW,GAACpB,UAAU,CAACqB,QAAQ,CAACF,KAAK,CAACG,SAAN,CAAgB,CAAhB,CAAD,CAAT,CAA1B;EACA,IAAIC,qBAAqB,GAACrB,oBAAoB,CAACmB,QAAQ,CAACF,KAAK,CAACG,SAAN,CAAgB,CAAhB,CAAD,CAAT,CAA9C;EACA,IAAIR,KAAK,GAACF,WAAW,CAACW,qBAAD,CAArB;EAGA,oBACI,QAAC,KAAD,CAAO,QAAP;IAAA,wBACI,QAAC,KAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,KAAD;MAAA,uBACI,QAAC,SAAD;QAAA,wBACI,QAAC,QAAD;UAAA,wBACI,QAAC,SAAD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,SAAD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI,QAAC,SAAD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHJ,eAII,QAAC,SAAD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJJ,eAKI,QAAC,SAAD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QALJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAQI,QAAC,SAAD;UAAA;UAAA;UAAA;QAAA,QARJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFJ,eAgBI;MAAA,UAAOT,KAAK,CAAC,CAAD,CAAL,CAASU;IAAhB;MAAA;MAAA;MAAA;IAAA,QAhBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAoBH;;GA5BeP,oB;UACDnB,S;;;KADCmB,oB"},"metadata":{},"sourceType":"module"}