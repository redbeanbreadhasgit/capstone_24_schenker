{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\12500\\\\Desktop\\\\Capstone\\\\capstone_24_schenker\\\\capstone\\\\src\\\\pages\\\\dashboard-applicantList-detailed\\\\GetApplicantInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { getApplicantInfo, getJobInfo, getPredictionInfo, getAllPredictionInfo } from \"../json/jsonUtil\";\nimport { TableBody, TableCell, TableHead, TableRow, Typography } from \"@material-ui/core\";\nimport { Box } from '@material-ui/core';\nimport Title from \"../components/Title\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet params = useParams();\nlet applicantID = params.applicantID;\nlet applicantSelected = getApplicantInfo(parseInt(applicantID.substring(1), 10));\nlet jobSelected = getJobInfo(parseInt(applicantSelected.applicantJob));\nlet predictionSelected = getPredictionInfo(parseInt(applicantID.substring(1), 10), parseInt(applicantSelected.applicantJob));\nlet AllPredictionInfoTable = getAllPredictionInfo(applicantID.substring(1), 10);\nexport function ReturnApplicantInfo() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        fontWeight: \"fontWeightBold\",\n        children: [\"Applicant Applied Job: \", jobSelected.jobTitle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        fontWeight: \"fontWeightBold\",\n        children: \"Current Reprofiled Job: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        fontWeight: \"fontWeightBold\",\n        children: [\"Applicant Status:  \", applicantSelected.applicantStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_c = ReturnApplicantInfo;\nexport function ReturnApplicantInfoTable() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Job Matching Results:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: \"Job Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: \"% Suitability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: \"Rank in Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: \"Applciant Job Skilles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n      children: AllPredictionInfoTable.map(each => /*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: getJobInfo(each.jobID).jobTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: each.predictionResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: each.Rank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: each.applicantSkills\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n}\n_c2 = ReturnApplicantInfoTable;\nexport function ReturnApplicantName() {\n  _s();\n\n  let params = useParams();\n  let applicantID = params.applicantID;\n  let applicantSelected = getApplicantInfo(parseInt(applicantID.substring(1), 10));\n  return applicantSelected.applicantName;\n}\n\n_s(ReturnApplicantName, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c3 = ReturnApplicantName;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ReturnApplicantInfo\");\n$RefreshReg$(_c2, \"ReturnApplicantInfoTable\");\n$RefreshReg$(_c3, \"ReturnApplicantName\");","map":{"version":3,"names":["useParams","getApplicantInfo","getJobInfo","getPredictionInfo","getAllPredictionInfo","TableBody","TableCell","TableHead","TableRow","Typography","Box","Title","params","applicantID","applicantSelected","parseInt","substring","jobSelected","applicantJob","predictionSelected","AllPredictionInfoTable","ReturnApplicantInfo","jobTitle","applicantStatus","ReturnApplicantInfoTable","map","each","jobID","predictionResult","Rank","applicantSkills","ReturnApplicantName","applicantName"],"sources":["C:/Users/12500/Desktop/Capstone/capstone_24_schenker/capstone/src/pages/dashboard-applicantList-detailed/GetApplicantInfo.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport {getApplicantInfo, getJobInfo, getPredictionInfo, getAllPredictionInfo} from \"../json/jsonUtil\";\r\nimport { TableBody, TableCell, TableHead, TableRow, Typography } from \"@material-ui/core\";\r\nimport {Box} from '@material-ui/core';\r\nimport Title from \"../components/Title\";\r\n\r\nlet params=useParams();\r\nlet applicantID=params.applicantID;\r\nlet applicantSelected=getApplicantInfo(parseInt(applicantID.substring(1,),10));\r\nlet jobSelected=getJobInfo(parseInt(applicantSelected.applicantJob));\r\nlet predictionSelected=getPredictionInfo(parseInt(applicantID.substring(1,),10),parseInt(applicantSelected.applicantJob));\r\n\r\nlet AllPredictionInfoTable=getAllPredictionInfo(applicantID.substring(1,),10);\r\n\r\nexport function ReturnApplicantInfo(){\r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n        <div>\r\n            {/* <Typography variant=\"h5\" >Selected Applicant : applicantID {applicantID}</Typography> */}\r\n            {/* <Typography>\r\n                <Box fontWeight=\"fontWeightRegular\" > \r\n                    Selected Applicant Infomation :\r\n                </Box>\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                    Applicant ID : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\" > \r\n                    {applicantSelected.applicantID}\r\n                </Box>\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                Applicant Name : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\" > \r\n                {applicantSelected.applicantName}\r\n                </Box>\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                Applicant File : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                {applicantSelected.applicantFile} \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                Applicant Status : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                {applicantSelected.applicantStatus}\r\n                </Box>\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                Applicant Applied Job ID: \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                {applicantSelected.applicantJob}\r\n                </Box>\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                Job Title : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                {jobSelected.jobTitle}\r\n                </Box>\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                Job Matching date : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                {jobSelected.jobMatchingDate}\r\n                </Box>\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                Job Update Date : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                {jobSelected.jobUpdateDate}\r\n                </Box>\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                Job Recruiter ID : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                {jobSelected.recruiterID}\r\n                </Box>\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                Job Hiring Manager ID : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                {jobSelected.hiringManagerID}\r\n                </Box>\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                Job Description :  \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                {jobSelected.jobDescription}\r\n                </Box>\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                Job Requirments : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                {jobSelected.jobRequirements}\r\n                </Box> \r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                Prediction ID : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                {predictionSelected.predictionID}\r\n                </Box>  \r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                Prediction Result (%) : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                {predictionSelected.predictionResult*100} %\r\n                </Box>\r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                Applicant Education Level : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                {predictionSelected.applicantEducation}\r\n                </Box>          \r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                Applicant Experience : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                {predictionSelected.applicantExperience}\r\n                </Box>  \r\n                <Box fontWeight=\"fontWeightBold\" > \r\n                Prediction Skills : \r\n                </Box>\r\n                <Box fontWeight=\"fontWeightRegular\" fontStyle=\"italic\"> \r\n                {predictionSelected.applicantSkills}\r\n                </Box>  \r\n            </Typography> */}\r\n        \r\n            <Typography>\r\n                <Box fontWeight={\"fontWeightBold\"}>\r\n                    Applicant Applied Job: {jobSelected.jobTitle}\r\n                </Box>\r\n                <Box fontWeight={\"fontWeightBold\"}>\r\n                    Current Reprofiled Job: {}\r\n                </Box>\r\n                <Box fontWeight={\"fontWeightBold\"}>\r\n                    Applicant Status:  {applicantSelected.applicantStatus}\r\n                </Box>\r\n                \r\n            </Typography>\r\n            \r\n        </div>\r\n    );     \r\n}\r\n\r\nexport function ReturnApplicantInfoTable(){\r\n\r\n    return(\r\n        <div>\r\n            <Title>\r\n                Job Matching Results:\r\n            </Title>\r\n            <TableHead>\r\n                <TableCell>Job Name</TableCell>\r\n                <TableCell>% Suitability</TableCell>\r\n                <TableCell>Rank in Job</TableCell>\r\n                <TableCell>Applciant Job Skilles</TableCell>\r\n            </TableHead>\r\n            <TableBody>\r\n                {\r\n                    AllPredictionInfoTable.map(each =>(\r\n                        <TableRow>\r\n                            <TableCell>{getJobInfo(each.jobID).jobTitle}</TableCell>\r\n                            <TableCell>{each.predictionResult}</TableCell>\r\n                            <TableCell>{each.Rank}</TableCell>\r\n                            <TableCell>{each.applicantSkills}</TableCell>\r\n                        </TableRow>\r\n                    ))\r\n                }\r\n            </TableBody>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function ReturnApplicantName(){\r\n    let params=useParams();\r\n    let applicantID=params.applicantID;\r\n    let applicantSelected=getApplicantInfo(parseInt(applicantID.substring(1,),10));\r\n    return applicantSelected.applicantName;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}