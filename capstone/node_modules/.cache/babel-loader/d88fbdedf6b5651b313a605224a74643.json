{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\12500\\\\Desktop\\\\Capstone\\\\capstone_24_schenker\\\\capstone\\\\src\\\\pages\\\\dashboard-jobList\\\\JobList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../components/Title';\nimport applicants from '../json/all_applicants.json';\nimport pred from \"../json/model_prediction.json\";\nimport jobs from \"../json/all_jobs.json\";\nimport { Button, RootRef } from '@material-ui/core';\nimport { getApplicantInfo, getJobInfo, getPredictionInfo, getJobsNum, getPredictionsNum } from \"../jsonver3/jsonUtil\";\nimport { Link as routerLink, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet jobnum = getJobsNum();\nlet predCount = getPredictionsNum();\n\nfunction createTable() {\n  let table = [];\n\n  for (let i = 0; i <= jobnum; i++) {\n    table.push(getJobInfo(i));\n  }\n\n  return table;\n}\n\nfunction findSuitability(applicantId, jobId) {\n  let suitabilityList = [];\n\n  for (var i = 0; i < predCount; i++) {\n    let eachPredEntry = pred.rows[i]; // console.log(eachPredEntry);s\n\n    if (eachPredEntry[2] === applicantId) {\n      suitabilityList.push(eachPredEntry);\n    }\n\n    let length = suitabilityList.length; // console.log(predCount);\n\n    for (var j = 0; j < length; j++) {\n      if (suitabilityList[j][3] === jobId) {\n        return suitabilityList[j][1];\n      }\n    } // return \"error\";\n\n  }\n} // findSuitability(1,1);\n\n\nlet rows = []; // create rows\n\nfor (let i = 0; i < jobnum; i++) {\n  let eachjob = jobs.rows[i];\n  rows.push(createData(eachjob[0], eachjob[1], eachjob[2], eachjob[3], eachjob[4], eachjob[5], eachjob[6]));\n} // sort by suitability , id\n\n\nfunction sortSuitability(x, y) {\n  if (x.suitability < y.suitability) {\n    return 1;\n  }\n\n  if (x.suitability > y.suitability) {\n    return -1;\n  }\n\n  return 0;\n}\n\nfunction sortId(x, y) {\n  if (x.id < y.id) {\n    return 1;\n  }\n\n  if (x.id > y.id) {\n    return -1;\n  }\n\n  return 0;\n}\n\nfunction sortBySuitabilty() {\n  rows.sort(sortSuitability);\n}\n\nfunction sortById() {\n  rows.sort(sortId);\n} // rows.sort(sortSuitability);\n\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst prevRowsInfo = rows;\nexport default function JobListTable() {\n  _s();\n\n  const classes = useStyles();\n  const [rowsInfo, setRowsInfo] = useState(rows);\n  const prevRowsInfo = rows; // useEffect(() => {\n  //   setRowsInfo(originRows)\n  // });\n\n  let table = createTable();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"All Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      size: \"small\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Matching Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Update Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Hiring Manager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Recruiter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Job Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: table.map(each => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              component: routerLink,\n              to: `/jobList:${each.jobID}`,\n              children: each.jobTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: each.matchingDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: each.updateDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"each.hiringManager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: each.recruiterID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: each.jobDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JobListTable, \"QPqCjdg8lBqWwccBKK7bMgER8q4=\", false, function () {\n  return [useStyles];\n});\n\n_c = JobListTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobListTable\");","map":{"version":3,"names":["React","useState","useEffect","Link","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Title","applicants","pred","jobs","Button","RootRef","getApplicantInfo","getJobInfo","getPredictionInfo","getJobsNum","getPredictionsNum","routerLink","Outlet","jobnum","predCount","createTable","table","i","push","findSuitability","applicantId","jobId","suitabilityList","eachPredEntry","rows","length","j","eachjob","createData","sortSuitability","x","y","suitability","sortId","id","sortBySuitabilty","sort","sortById","preventDefault","event","useStyles","theme","seeMore","marginTop","spacing","prevRowsInfo","JobListTable","classes","rowsInfo","setRowsInfo","map","each","jobID","jobTitle","matchingDate","updateDate","recruiterID","jobDescription"],"sources":["C:/Users/12500/Desktop/Capstone/capstone_24_schenker/capstone/src/pages/dashboard-jobList/JobList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../components/Title';\nimport applicants from '../json/all_applicants.json';\nimport pred from \"../json/model_prediction.json\";\nimport jobs from \"../json/all_jobs.json\";\nimport { Button, RootRef } from '@material-ui/core';\n\nimport {getApplicantInfo, getJobInfo, getPredictionInfo, getJobsNum,getPredictionsNum} from \"../jsonver3/jsonUtil\";\nimport {Link as routerLink, Outlet } from 'react-router-dom';\n\n\n\nlet jobnum=getJobsNum();\nlet predCount=getPredictionsNum();\n\nfunction createTable(){\n  let table=[];\n  for (let i=0; i<=jobnum; i++){\n    table.push(getJobInfo(i))\n  }\n  return table;\n}\n\n\n\nfunction findSuitability(applicantId,jobId){\n  let suitabilityList=[];\n  for (var i=0; i<predCount;i++){\n    let eachPredEntry=pred.rows[i];\n    // console.log(eachPredEntry);s\n    if (eachPredEntry[2] === applicantId ){\n      suitabilityList.push(eachPredEntry);\n    }\n    let length=suitabilityList.length;\n    // console.log(predCount);\n    for (var j=0;j<length;j++){\n      if (suitabilityList[j][3]=== jobId){\n        return suitabilityList[j][1]\n      }      \n    }\n    // return \"error\";\n  }\n}\n\n// findSuitability(1,1);\n\nlet rows = [\n];\n\n// create rows\nfor (let i=0; i<jobnum; i++){\n  let eachjob=jobs.rows[i];\n  rows.push(createData(eachjob[0], eachjob[1] ,eachjob[2],eachjob[3],eachjob[4],eachjob[5],eachjob[6]));\n  \n}\n\n// sort by suitability , id\nfunction sortSuitability(x,y){\n  if (x.suitability < y.suitability) {return 1;}\n  if (x.suitability > y.suitability) {return -1;}\n  return 0;\n}\n\nfunction sortId(x,y){\n  if (x.id < y.id) {return 1;}\n  if (x.id > y.id) {return -1;}\n  return 0;\n}\n\nfunction sortBySuitabilty(){\n  rows.sort(sortSuitability);  \n}\n\nfunction sortById(){\n  rows.sort(sortId);  \n}\n\n// rows.sort(sortSuitability);\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst prevRowsInfo=rows;\n\nexport default function JobListTable() {\n  const classes = useStyles();\n  const [rowsInfo,setRowsInfo]=useState(rows);\n  const prevRowsInfo=rows;\n  // useEffect(() => {\n  //   setRowsInfo(originRows)\n  // });\n  let table=createTable();\n  return (\n    <React.Fragment>\n      <Title>All Jobs</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            {/* <TableCell>ID</TableCell> */}\n            <TableCell>Job Title</TableCell>\n            <TableCell>Matching Date</TableCell>\n            <TableCell>Update Date</TableCell>\n            <TableCell>Hiring Manager</TableCell>\n            <TableCell>Recruiter</TableCell>\n            <TableCell>Job Description</TableCell>\n            \n            {/* <TableCell align=\"right\">Selected or not</TableCell> */}\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {table.map((each) => (\n            <TableRow >\n              {/* <TableCell>{row.id}</TableCell> */}\n              <TableCell><Link component={routerLink} to={`/jobList:${each.jobID}`}>{each.jobTitle}</Link></TableCell>\n              <TableCell>{each.matchingDate}</TableCell>\n              <TableCell>{each.updateDate}</TableCell>\n              <TableCell>{\"each.hiringManager\"}</TableCell>\n              <TableCell>{each.recruiterID}</TableCell>\n              <TableCell>{each.jobDescription}</TableCell>\n              {/* <TableCell align=\"right\">{row.selected}</TableCell> */}\n            </TableRow>\n          ))}\n        </TableBody>        \n      </Table>\n      \n      \n      {/* <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more updates\n        </Link>\n      </div> */}\n      \n    </React.Fragment>\n  );\n}\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}